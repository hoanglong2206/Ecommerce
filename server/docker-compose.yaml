version: "3.9"
services:
  redis:
    container_name: redis_container
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --loglevel warning
    volumes:
      - ./docker-volumes/cache:/data

  mongodb:
    container_name: mongodb_container
    image: mongo:latest
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ./docker-volumes/data:/data/db

  mysql:
    container_name: mysql_container
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      - MYSQL_USER=long
      - MYSQL_DATABASE=ecommerce_auth
      - MYSQL_ROOT_PASSWORD=longkg123A
      - MYSQL_PASSWORD=longkg123A
    ports:
      - "3307:3306"
    volumes:
      - ./docker-volumes/mysql:/var/lib/mysql

  postgres:
    container_name: postgres_container
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=long
      - POSTGRES_PASSWORD=longkg123A
      - POSTGRES_DB=ecommerce_reviews
    ports:
      - "5432:5432"
    volumes:
      - ./docker-volumes/postgres:/var/lib/postgresql

  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3.13-management-alpine
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=long
      - RABBITMQ_DEFAULT_PASS=longkg123A
    ports:
      # AMQP protocol port
      - "5672:5672"
      # Management UI
      - "15672:15672"

  elasticsearch:
    container_name: elasticsearch_container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.1
    restart: always
    environment:
      ES_JAVA_OPTS: -Xmx1g -Xms1g
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      # network.host: 0.0.0.0
      # transport.host: 127.0.0.1
      # http.host: 0.0.0.0
      xpack.security.enabled: "false"
      xpack.security.authc.api_key.enabled: "true"
      xpack.monitoring.collection.enabled: "true"
      xpack.security.enrollment.enabled: "true"
      # xpack.security.authc.token.enabled: "true"
      # ELASTIC_PASSWORD: admin1234
    ports:
      - 9300:9300
      - 9200:9200
    volumes:
      - ./docker-volumes/elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elastic

  kibana:
    container_name: kibana_container
    image: docker.elastic.co/kibana/kibana:8.13.1
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch_container:9200"]
      # - ELASTICSEARCH_USERNAME=kibana_system
      # - ELASTICSEARCH_PASSWORD=kibana
      # - ELASTICSEARCH_SERVICEACCOUNT_TOKEN=AAEAAWVsYXN0aWMva2liYW5hL2pvYmJlci1raWJhbmE6N3BWZ0ItZWxSY21wMEJ0Y3ZKNTlHZw
      # - XPACK_FLEET_AGENTS_ELASTICSEARCH_HOSTS=["http://elasticsearch_container:9200"]
    ports:
      - 5601:5601
    networks:
      - elastic
    volumes:
      - ./kibana.yml/:/usr/share/kibana/config/kibana.yml:ro
    depends_on:
      - elasticsearch

  gateway:
    container_name: gateway_container
    build:
      context: ./gateway
      dockerfile: Dockerfile
    restart: always
    ports:
      - 4000:4000
    env_file: ./gateway/.env
    environment:
      - CLIENT_URL=http://localhost:3000
      - AUTH_BASE_URL=http://localhost:4002
      - USERS_BASE_URL=http://localhost:4003
      - GIG_BASE_URL=http://localhost:4004
      - MESSAGE_BASE_URL=http://localhost:4005
      - ORDER_BASE_URL=http://localhost:4006
      - REVIEW_BASE_URL=http://localhost:4007
      - REDIS_HOST=redis://redis_container:6379
      - ELASTIC_SEARCH_URL=http://elasticsearch_container:9200
      - ELASTIC_APM_SERVICE_URL=http://localhost:8200
      - ELASTIC_APM_SECRET_TOKEN=
      - GATEWAY_JWT_TOKEN=secret
      - JWT_TOKEN=secret
      - SECRET_KEY_ONE=secret
      - SECRET_KEY_TWO=secret
      - NODE_ENV=development
      - ENABLE_APM=0

networks:
  elastic:
    name: elastic
# docker compose up -d redis mongodb mysql postgres rabbitmq elasticsearch kibana
